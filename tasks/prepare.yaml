---

- name: include OS specific configuration ({{ ansible_distribution }} ({{ ansible_os_family }}) {{ ansible_distribution_major_version }})
  include_vars: "{{ lookup('first_found', params) }}"
  vars:
    params:
      paths:
        - "vars"
      files:
        # eg. debian-10 / ubuntu-20.04 / centos-8 / oraclelinux-8
        - "{{ ansible_distribution | lower }}-{{ ansible_distribution_major_version }}.yml"
        # eg. archlinux-systemd / archlinux-openrc
        - "{{ ansible_distribution | lower }}-{{ ansible_service_mgr | lower }}.yml"
        # eg. debian / ubuntu / centos / oraclelinux
        - "{{ ansible_distribution | lower }}.yml"
        # eg. redhat / debian / archlinux
        - "{{ ansible_os_family | lower }}.yml"
        - default.yaml
      skip: true

- name: update package cache
  package:
    update_cache: true

- name: install dependency
  package:
    name: "{{ json_exporter_requirements }}"
    state: present

- name: create local tmp directory
  become: false
  delegate_to: 127.0.0.1
  file:
    path: "{{ json_exporter_local_tmp_directory }}"
    state: directory
    mode: 0750

- name: Create json_exporter group
  group:
    name: "{{ json_exporter_system_group }}"
    state: present
    system: true
  when:
    - json_exporter_system_group != "root"

- name: Create json_exporter user
  user:
    name: "{{ json_exporter_system_user }}"
    groups: "{{ json_exporter_system_group }}"
    append: true
    shell: /usr/sbin/nologin
    system: true
    createhome: false
    home: /nonexistent
  when:
    - json_exporter_system_user != "root"

# - name: merge json_exporter configuration between defaults and custom
#   set_fact:
#     json_exporter_config: "{{ json_exporter_defaults_config |
#       combine( json_exporter_config, recursive=True ) }}"

...
